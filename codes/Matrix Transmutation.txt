>> rgbImage = imread('C:\Users\MAHE_MSK\Desktop\ImageEncryptionGUI\1.jpg');
imshow(rgbImage);
set(gcf, 'units','normalized','outerposition',[0 0 1 1]);
drawnow;
[rows columns numberOfColorBands] = size(rgbImage)

blockSizeR = 210; % Rows in block.
blockSizeC = 270; % Columns in block.
wholeBlockRows = floor(rows / blockSizeR);
blockVectorR = [blockSizeR * ones(1, wholeBlockRows), rem(rows, blockSizeR)];
wholeBlockCols = floor(columns / blockSizeC);
blockVectorC = [blockSizeC * ones(1, wholeBlockCols), rem(columns, blockSizeC)];

%block division
if numberOfColorBands > 1
	ca = mat2cell(rgbImage, blockVectorR, blockVectorC, numberOfColorBands);
else
	ca = mat2cell(rgbImage, blockVectorR, blockVectorC);
end

%display each block
plotIndex = 1;
numPlotsR = size(ca, 1);
numPlotsC = size(ca, 2);
for r = 1 : numPlotsR
	for c = 1 : numPlotsC
		fprintf('plotindex = %d,   c=%d, r=%d\n', plotIndex, c, r);
		subplot(numPlotsR, numPlotsC, plotIndex);
		rgbBlock = ca{r,c};
		imshow(rgbBlock); % Could call imshow(ca{r,c}) if you wanted to.
		X=rgbBlock;
   		
		%for Arnold catmap function call
		for i = 1:60
   		 X = catmap(X);
   		 figure(1);image(X);title(i);
   		 refresh;
   		 pause(.000000001);
  		end
        ca{r,c}=X;
        [rowsB columnsB numberOfColorBandsB] = size(rgbBlock);
		%caption = sprintf('Block #%d of %d\n%d rows by %d columns', ...
			%plotIndex, numPlotsR*numPlotsC, rowsB, columnsB);
		%title(caption);
		drawnow;
		plotIndex = plotIndex + 1;
	end
end


%reconsolidate the blocks
for r = 1 : numPlotsR
	for c = 1 : numPlotsC
B=cell2mat(ca);
end
end
figure(2);image(B);